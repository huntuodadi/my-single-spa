{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/start.js","../../src/lifecycle/load.js","../../src/lifecycle/bootstrap.js","../../src/lifecycle/mount.js","../../src/lifecycle/unmount.js","../../src/navigations/navigator-events.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 应用的状态\nexport const NOT_LOADED = 'NOT_LOADED';\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE';\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED';\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING';\nexport const BOOTSTRAPPED = 'BOOTSTRAPPED';\nexport const NOT_MOUNTED = 'NOT_MOUNTED';\nexport const MOUNTING = 'MOUNTING';\nexport const MOUNTED = 'MOUNTED';\nexport const UPDATING = 'UPDATING';\nexport const UNMOUNTING = 'UNMOUNTING'; // 解除挂载\nexport const UNLOADING = 'UNLOADING'; //完全卸载中\nexport const LOAD_ERR = 'LOAD_ERR';\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN';\n\n\n// 当前应用是否被激活\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\n// 当前应用是否要被激活, 如果返回true应用开始初始化等一系列操作\nexport function shouldBeActive(app) {\n  return app.activeWhen(window.location)\n}","import { reroute } from './navigations/reroute';\n\nexport let started = false;\nexport function start() {\n  // 需要挂载应用\n  started = true;\n  reroute(); //除了加载还需要挂载\n}","import {\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n} from '../applications/app.helpers';\n\nfunction flattenFnArray(fns) {\n  fns = Array.isArray(fns) ? fns : [fns];\n  // 通过promise链式调用  多个方法组合成一个方法\n  return (props) => fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve());\n}\n\nexport async function toLoadPromise(app) {\n  if(app.loadPromise) {\n    return app.loadPromise; // 缓存机制\n  }\n  return (app.loadPromise = Promise.resolve().then(async () => {\n    app.status = LOADING_SOURCE_CODE;\n    let { bootstrap, mount, unmount } = await app.loadApp(app.customProps);\n    app.status = NOT_BOOTSTRAPPED; // 还没调用boostrap方法\n  \n    // bootstrap可以是个数组 希望多个promise组合在一起\n    app.bootstrap = flattenFnArray(bootstrap);\n    app.mount = flattenFnArray(mount);\n    app.unmount = flattenFnArray(unmount);\n    delete app.loadPromise;\n    return app;\n  }));\n}","import { NOT_BOOTSTRAPPED, BOOTSTRAPPING, NOT_MOUNTED } from '../applications/app.helpers';\n\nexport async function toBootstrapPromise(app) {\n  if(app.status !== NOT_BOOTSTRAPPED) {\n    return app;\n  }\n  app.status = BOOTSTRAPPING;\n  await app.bootstrap(app.customProps);\n  app.status = NOT_MOUNTED;\n  return app;\n}","\n\nimport { NOT_MOUNTED, MOUNTING, MOUNTED } from '../applications/app.helpers';\n\nexport async function toMountPromise(app) {\n  if(app.status !== NOT_MOUNTED) {\n    return app;\n  }\n  app.status = MOUNTING;\n  await app.mount(app.customProps);\n  app.status = MOUNTED;\n  return app;\n}","import {\n  MOUNTED,\n  UNMOUNTING,\n  NOT_MOUNTED,\n} from '../applications/app.helpers';\nexport async function toUnmountPromise(app) {\n  if(app.status !== MOUNTED) {\n    return app;\n  }\n  app.status = UNMOUNTING;\n  await app.unmount(app.customProps);\n  app.status = NOT_MOUNTED;\n  return app;\n}","import { reroute } from \"./reroute\";\n\n// hashchange, history api\nexport const routingEventsListeningTo = ['hashchange', 'popstate'];\n\nfunction urlReroute(e) {\n  console.log('hash change');\n  reroute([], arguments); // 会根据路径重新加载不同的应用\n}\n\nconst captureEventListeners = { //后续挂载的事件先暂存起来\n  hashchange: [],\n  popstate: [],\n}\n\n// 处理应用加载的逻辑是在最前面\nwindow.addEventListener('hashchange', urlReroute)\nwindow.addEventListener('popstate', urlReroute);\n\nconst originalAddEventListener = window.addEventListener;\nconst origianlRemoveEventListener = window.removeEventListener;\n\nwindow.addEventListener = function(eventName, fn) {\n  if(routingEventsListeningTo.includes(eventName) && !captureEventListeners[eventName].some(lis => lis === fn)) {\n    captureEventListeners[eventName].push(fn);\n    console.log('captureEventListeners:', captureEventListeners);\n    return;\n  }\n\n  return originalAddEventListener.apply(this, arguments);\n}\n\nwindow.removeEventListener = function(eventName, fn) {\n  if(routingEventsListeningTo.includes(eventName)) {\n    captureEventListeners[eventName] = captureEventListeners[eventName].filter(l => l !== fn);\n    return;\n  }\n  return originalRemoveEventListener.apply(this, arguments);\n}\n\n\n// hashrouter\n// browserrouter 时h5api 切换时不会触发popstate\nfunction patchedUpdateState(updateState, methodName) {\n  return function() {\n    const urlBefore = window.location.href;\n    updateState.apply(this, arguments);\n    const urlAfter = window.location.href;\n    if(urlBefore !== urlAfter) {\n      // 重新加载应用 传入事件源\n      urlReroute(new PopStateEvent('popstate'));\n    }  \n  }\n}\nwindow.history.pushState = patchedUpdateState(window.history.pushState, 'pushState');\nwindow.history.replaceState = patchedUpdateState(window.history.replaceState, 'replaceState');\n// 用户可能还会绑定自己的路由事件\n\n// 当我们应用切换后 还需要处理原来的方法， 需要在应用切换后再执行","import { started } from '../start';\nimport { getAppChanges } from '../applications/app';\nimport { toLoadPromise } from '../lifecycle/load';\nimport { toBootstrapPromise } from '../lifecycle/bootstrap';\nimport { toMountPromise } from '../lifecycle/mount';\nimport { toUnmountPromise  } from '../lifecycle/unmount';\nimport './navigator-events';\n\n// 核心应用处理方法\nexport function reroute() {\n\n  // 获取需要加载的应用\n  // 获取要被挂载的应用\n  // 哪些app需要被卸载\n  const { appsToLoad, appsToMount, appsToUnmount } = getAppChanges();\n\n  // start 方法的调用时同步的 但是加载流程时异步的\n  if(started) {\n    // app装载\n    return performAppChange(); //根据路径装载应用\n  }else{\n    // 注册时 需要预先加载\n    return loadApps();\n  }\n\n  async function loadApps() {\n    let apps = await Promise.all(appsToLoad.map(toLoadPromise)); //  获取到bootstrap mount unmount方法放到app上\n  }\n\n  async function performAppChange() {\n    // 先卸载不需要的应用\n    let unmountPromises = await Promise.all(appsToUnmount.map(toUnmountPromise));\n    // 去加载需要的应用\n    appsToLoad.map(async (app) => { // 将需要加载的应用拿到 => 加载 => 启动 => 挂载. 问题: 这里为什么还要再加载一遍\n      return await toMountPromise(await toBootstrapPromise(await toLoadPromise(app)));\n    });\n    appsToMount.map(async app => {\n      return await toMountPromise(await toBootstrapPromise(app))\n    });\n  }\n}\n\n// 这个流程适用于初始化操作的，还需要当路径切换时重新加载\n// 重写路由相关方法(路由拦截)","import {\n  NOT_LOADED,\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  BOOTSTRAPPED,\n  NOT_MOUNTED,\n  MOUNTING,\n  MOUNTED,\n  UPDATING,\n  UNMOUNTING,\n  UNLOADING,\n  LOAD_ERR,\n  SKIP_BECAUSE_BROKEN,\n  shouldBeActive,\n} from './app.helpers';\nimport { reroute } from '../navigations/reroute';\n\n/**\n * \n * @param {*} appName applicaiton name\n * @param {*} loadApp \n * @param {*} activeWhen \n * @param {*} customProps \n */\nconst apps = [];\n\n// 维护应用所有的状态 状态机\nexport function registerApplication(appName, loadApp, activeWhen, customProps) {\n  apps.push({\n    name: appName,\n    loadApp,\n    activeWhen,\n    customProps,\n    status: NOT_LOADED,\n  });\n  reroute(); //加载应用\n}\n\nexport function getAppChanges() {\n  const appsToUnmount = [];\n  const appsToLoad = [];\n  const appsToMount = [];\n  apps.forEach(app => {\n    // 需不需要被加载\n    const appShouldBeActive = shouldBeActive(app);\n    switch(app.status) {\n      case NOT_LOADED:\n        \n      case LOADING_SOURCE_CODE:\n        if(appShouldBeActive) {\n          appsToLoad.push(app);\n        }\n        break;\n\n      case NOT_BOOTSTRAPPED:\n      case BOOTSTRAPPING:\n      case NOT_MOUNTED:\n        if(appShouldBeActive) {\n          appsToMount.push(app);\n        }\n        break;\n      case MOUNTED:\n        if(!appShouldBeActive) {\n          appsToUnmount.push(app);\n        }\n      default:\n        break;\n    }\n  });\n  return {\n    appsToUnmount,\n    appsToLoad,\n    appsToMount,\n  };\n}"],"names":[],"mappings":"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"}